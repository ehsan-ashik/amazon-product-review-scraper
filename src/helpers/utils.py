import os
from my_fake_useragent import UserAgent
from src.helpers.constants import Constants


def get_headers():
	"""Get header with random user agents generated by `my_fake_useragent`

	Params:No params

	Returns: 
    The user-agent object
	"""
	return {
    	'User-Agent': UserAgent(family="chrome").random()
	}


def format_text(text: str):
	# replace \u2019 to '
	text = text.replace('\u2019', "'")

	# replace \u201c and \u201d to '
	text = text.replace('\u201c', "'")
	text = text.replace('\u201d', "'")

	# replace \u2026 to ...
	text = text.replace('\u2026', '...')

	# replace \u00a0 with space
	text = text.replace('\u00a0', '')

	# remove all starting with \ud (work later on)
	#text = re.sub(r'\\ud.*', '', text)

	# return formatted text
	return text


def export_to_file(filename: str, data: str):
	"""export data to the file

	Params:
	@filename: filename to export data
	@data: string data to export to the file

	Returns: No return
	"""
	# delete if the same file already exists
	if os.path.exists(filename):
		try:	
			# remove the file
			os.remove(filename)
		except:
			# remove file failed
			raise BaseException("Removing file failed...")

	# create directory if not exists
	os.makedirs(os.path.dirname(filename), exist_ok=True)

	# save the reviews
	with open(filename, "w") as file:
		try:
			# write data to file
			file.write(data)
		except:
			# writing to file failed
			raise BaseException("Write to the file failed...")
		


def get_product_filename(dir: str, product_asin: str):
        """Get the filename where the product data is stored

        Params: None

        Returns: filename of the product data for the asin
        """
        # get template
        template = Constants.PRODUCT_DATA_FILE_NAME

        # retrun after replacing the asin
        filename = template.replace('asin', product_asin)

        # add folder path to the file
        filename = os.path.join(f'./src/generated_data/html_data/{dir}', filename)

        return filename



def get_reviews_filename(dir: str, product_asin: str, keyword: str):
        """Get the filename where the review data is stored

        Params: None

        Returns: filename of the reviews data for the asin and the keyword
        """
        #get template
        template = Constants.REVIEWS_DATA_FILE_NAME

        # return after replacing
        filename =  template.replace('asin_keyword', f"{product_asin}_{keyword}")

        # add folder path to the file
        filename = os.path.join(f'./src/generated_data/html_data/{dir}', filename)

        return filename